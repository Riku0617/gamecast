{"ast":null,"code":"import { PossessionTeam, BallPlace, Punt, EndMakeDrive, GetPoints, KickOff, InterceptionFunc, Offense } from './EntryPoint';\n\nconst Allprocessor = _ref => {\n  let {\n    data,\n    hometeam,\n    ballPlace,\n    ballPossession,\n    ballOn,\n    down,\n    distance,\n    setPlayAmount,\n    setYardsDrived,\n    gameData,\n    setBallPlace,\n    setBallPossession,\n    setBallOn,\n    setId,\n    setDown,\n    setDistance,\n    setHomePoints,\n    setAwayPoints\n  } = _ref;\n  var state = {\n    BallPlaceResult: ballPlace\n  }; // BallOnのヤードに関して、Offenceでgainした時の処理\n\n  if (data.o_or_k === \"Offense\") {\n    Offense({\n      data,\n      ballPlace,\n      state,\n      ballPossession,\n      setBallOn,\n      ballOn,\n      setBallPlace,\n      down,\n      distance,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // Puntの時の処理\n\n\n  if (data.o_or_k === \"Punt\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n    Punt({\n      data,\n      ballOn,\n      setBallOn,\n      ballPlace,\n      setBallPlace,\n      state,\n      ballPossession\n    });\n  } // FGの処理// TDの処理\n\n\n  console.log(data.ball_on_result);\n\n  if (data.kick_isgood === \"Good\" || data.ball_on_result <= 0) {\n    GetPoints({\n      data,\n      ballPossession,\n      setHomePoints,\n      setAwayPoints,\n      setBallOn\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n    setBallPlace(!ballPlace);\n    console.log(\"Get Points\");\n  } else if (data.o_or_k === \"FG\" && data.kick_isgood === \"No Good\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // Kick Off処理\n\n\n  if (data.o_or_k === \"Kick Off\") {\n    KickOff({\n      data,\n      ballOn,\n      ballPossession,\n      setBallOn,\n      setBallPossession,\n      ballPlace,\n      setBallPlace,\n      state\n    }); // setBallPossession(!ballPossession)\n  } // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n  // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n\n\n  if (data.pass_iscomplete === \"Interception\" || data.result === \"Fumble\") {\n    setBallPossession(!ballPossession);\n    InterceptionFunc({\n      data,\n      ballPlace,\n      ballPossession,\n      setBallPlace,\n      setBallPossession,\n      setBallOn,\n      state\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance,\n      setPlayAmount,\n      setYardsDrived\n    });\n  } // ボール保持チームが変わった時の処理\n\n\n  PossessionTeam(data, ballPossession, gameData); // Ballがどちらの陣地にあるかに関する処理\n\n  BallPlace(data, ballPlace, state.BallPlaceResult, gameData);\n  return null;\n};\n\n_c = Allprocessor;\nexport default Allprocessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Allprocessor\");","map":{"version":3,"names":["PossessionTeam","BallPlace","Punt","EndMakeDrive","GetPoints","KickOff","InterceptionFunc","Offense","Allprocessor","data","hometeam","ballPlace","ballPossession","ballOn","down","distance","setPlayAmount","setYardsDrived","gameData","setBallPlace","setBallPossession","setBallOn","setId","setDown","setDistance","setHomePoints","setAwayPoints","state","BallPlaceResult","o_or_k","console","log","ball_on_result","kick_isgood","pass_iscomplete","result"],"sources":["/Users/toimotoriku/Desktop/gamecast/form/src/Form/functions/AllProcessor.ts"],"sourcesContent":["import React from 'react'\nimport { Game } from '../../GameForm/Alies'\nimport { Play } from '../Alies'\nimport { PossessionTeam,BallPlace, Punt,EndMakeDrive, GetPoints,KickOff, InterceptionFunc,Offense } from './EntryPoint'\n\n\ntype Props = {\n    data:Play\n    hometeam:string\n    ballPlace:boolean\n    ballPossession:boolean\n    ballOn:number\n    down:number\n    distance:number\n    gameData: Game[]\n    setPlayAmount:React.Dispatch<React.SetStateAction<number>>\n    setYardsDrived:React.Dispatch<React.SetStateAction<number>>\n    setBallPlace:React.Dispatch<React.SetStateAction<boolean>>\n    setBallPossession:React.Dispatch<React.SetStateAction<boolean>>\n    setBallOn:React.Dispatch<React.SetStateAction<number>>\n    setId:React.Dispatch<React.SetStateAction<number>>\n    setDown:React.Dispatch<React.SetStateAction<number>>\n    setDistance:React.Dispatch<React.SetStateAction<number>>\n    setHomePoints:React.Dispatch<React.SetStateAction<number>>\n    setAwayPoints:React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Allprocessor:React.FC<Props> = ({data,hometeam,ballPlace,ballPossession,ballOn,down,distance,setPlayAmount,setYardsDrived, gameData,setBallPlace,setBallPossession,setBallOn,setId,setDown,setDistance,setHomePoints,setAwayPoints}) => {\n\n    var state = {\n        BallPlaceResult:ballPlace\n    }\n\n\n    // BallOnのヤードに関して、Offenceでgainした時の処理\n    if (data.o_or_k === \"Offense\"){\n        Offense({data,ballPlace,state,ballPossession,setBallOn,ballOn,setBallPlace,down,distance,setBallPossession,setId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n    \n\n    // Puntの時の処理\n    if (data.o_or_k === \"Punt\"){\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance,setPlayAmount,setYardsDrived})\n        Punt({data,ballOn,setBallOn,ballPlace,setBallPlace,state,ballPossession})\n    }\n    // FGの処理// TDの処理\n    console.log(data.ball_on_result)\n    if (data.kick_isgood === \"Good\" || data.ball_on_result<=0){\n        GetPoints({data,ballPossession,setHomePoints,setAwayPoints,setBallOn})\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance,setPlayAmount,setYardsDrived})\n        setBallPlace(!ballPlace)\n        console.log(\"Get Points\")\n    }else if(data.o_or_k===\"FG\" && data.kick_isgood===\"No Good\"){\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n    // Kick Off処理\n    if (data.o_or_k ===\"Kick Off\"){\n        KickOff({data,ballOn,ballPossession,setBallOn,setBallPossession,ballPlace,setBallPlace,state})\n        // setBallPossession(!ballPossession)\n    }\n\n    // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n    // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n    if (data.pass_iscomplete===\"Interception\" || data.result === \"Fumble\"){\n        setBallPossession(!ballPossession)\n        InterceptionFunc({data,ballPlace,ballPossession,setBallPlace,setBallPossession,setBallOn,state});\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance,setPlayAmount,setYardsDrived})\n    }\n\n    // ボール保持チームが変わった時の処理\n    PossessionTeam(data,ballPossession,gameData);\n\n    // Ballがどちらの陣地にあるかに関する処理\n    BallPlace(data,ballPlace,state.BallPlaceResult,gameData)\n    \n  return null\n}\n\nexport default Allprocessor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}