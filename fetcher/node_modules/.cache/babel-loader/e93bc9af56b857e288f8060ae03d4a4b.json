{"ast":null,"code":"const Punt = _ref => {\n  let {\n    data,\n    ballPossession,\n    ballOn,\n    setBallOn,\n    ballPlace,\n    setBallPlace,\n    ballPlaceResult\n  } = _ref;\n\n  if (data.kick_result === \"TB\") {\n    setBallOn(20);\n    data.ball_on_result = 20;\n  } // else{\n  //     SetYards(ballPossession,ballPlace,ballOn,data.punt_distance-data.return_yards,setBallOn,setBallPlace)\n  // }\n  else if (ballOn + data.punt_distance - data.return_yards <= 50) {\n    setBallOn(ballOn + data.punt_distance - data.return_yards);\n    data.ball_on_result = ballOn + data.punt_distance - data.return_yards;\n  } else {\n    setBallOn(100 - (ballOn + data.punt_distance - data.return_yards));\n    data.ball_on_result = ballOn + data.punt_distance - data.return_yards;\n    setBallPlace(!ballPlace);\n  }\n\n  return null;\n};\n\n_c = Punt;\nexport default Punt; // ボール持ってるチームが変わる\n// ボールの場所が変わる\n// TBなら20yds\n// Returnnなら、Ballon＋Punt_distance)-return_yards\n// あるいは　100 - (Ballon＋Punt_distance)-return_yards)\n\nvar _c;\n\n$RefreshReg$(_c, \"Punt\");","map":{"version":3,"names":["Punt","data","ballPossession","ballOn","setBallOn","ballPlace","setBallPlace","ballPlaceResult","kick_result","ball_on_result","punt_distance","return_yards"],"sources":["/Users/toimotoriku/Desktop/gamecast/form1.1/src/form/functions/Punt.ts"],"sourcesContent":["import React from 'react'\nimport { Play } from '../Alies'\nimport SetYards from './SetYards'\n\n\ntype Props =  {\n    data:Play\n    ballPossession:boolean\n    setBallOn:React.Dispatch<React.SetStateAction<number>>\n    ballOn:number\n    ballPlace:boolean\n    setBallPlace:React.Dispatch<React.SetStateAction<boolean>>\n    ballPlaceResult:boolean\n}\n\n\nconst Punt:React.FC<Props> = ({data,ballPossession,ballOn,setBallOn,ballPlace,setBallPlace,ballPlaceResult}) => {\n\n    if(data.kick_result===\"TB\"){\n        setBallOn(20)\n        data.ball_on_result = 20\n    }\n    // else{\n    //     SetYards(ballPossession,ballPlace,ballOn,data.punt_distance-data.return_yards,setBallOn,setBallPlace)\n    // }\n    else if(ballOn+data.punt_distance-data.return_yards<=50){\n        setBallOn(ballOn+data.punt_distance-data.return_yards)\n        data.ball_on_result = ballOn+data.punt_distance-data.return_yards\n    }else{\n        setBallOn(100 - (ballOn+data.punt_distance-data.return_yards))\n        data.ball_on_result = ballOn+data.punt_distance-data.return_yards\n        setBallPlace(!ballPlace)\n    }\n    \n  return null\n}\n\nexport default Punt\n\n// ボール持ってるチームが変わる\n// ボールの場所が変わる\n// TBなら20yds\n// Returnnなら、Ballon＋Punt_distance)-return_yards\n// あるいは　100 - (Ballon＋Punt_distance)-return_yards)"],"mappings":"AAgBA,MAAMA,IAAoB,GAAG,QAAmF;EAAA,IAAlF;IAACC,IAAD;IAAMC,cAAN;IAAqBC,MAArB;IAA4BC,SAA5B;IAAsCC,SAAtC;IAAgDC,YAAhD;IAA6DC;EAA7D,CAAkF;;EAE5G,IAAGN,IAAI,CAACO,WAAL,KAAmB,IAAtB,EAA2B;IACvBJ,SAAS,CAAC,EAAD,CAAT;IACAH,IAAI,CAACQ,cAAL,GAAsB,EAAtB;EACH,CAHD,CAIA;EACA;EACA;EANA,KAOK,IAAGN,MAAM,GAACF,IAAI,CAACS,aAAZ,GAA0BT,IAAI,CAACU,YAA/B,IAA6C,EAAhD,EAAmD;IACpDP,SAAS,CAACD,MAAM,GAACF,IAAI,CAACS,aAAZ,GAA0BT,IAAI,CAACU,YAAhC,CAAT;IACAV,IAAI,CAACQ,cAAL,GAAsBN,MAAM,GAACF,IAAI,CAACS,aAAZ,GAA0BT,IAAI,CAACU,YAArD;EACH,CAHI,MAGA;IACDP,SAAS,CAAC,OAAOD,MAAM,GAACF,IAAI,CAACS,aAAZ,GAA0BT,IAAI,CAACU,YAAtC,CAAD,CAAT;IACAV,IAAI,CAACQ,cAAL,GAAsBN,MAAM,GAACF,IAAI,CAACS,aAAZ,GAA0BT,IAAI,CAACU,YAArD;IACAL,YAAY,CAAC,CAACD,SAAF,CAAZ;EACH;;EAEH,OAAO,IAAP;AACD,CAnBD;;KAAML,I;AAqBN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}