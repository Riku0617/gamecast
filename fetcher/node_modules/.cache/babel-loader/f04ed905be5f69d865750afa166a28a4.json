{"ast":null,"code":"const SetYards = (possession, ballPlace, ballOn, gainYards, setBallOn, setBallPlace) => {\n  if (possession && ballPlace) {\n    if (ballOn + gainYards <= 50) {\n      setBallOn(prevBallOn => prevBallOn + gainYards);\n    } else {\n      setBallOn(prevBallOn => 100 - prevBallOn - gainYards);\n      setBallPlace(!ballPlace);\n    }\n  } else if (possession && !ballPlace) {\n    setBallOn(prevBallOn => prevBallOn - gainYards);\n  } else if (!possession && ballPlace) {\n    setBallOn(prevBallOn => prevBallOn - gainYards);\n  } else {\n    if (ballOn + gainYards <= 50) {\n      setBallOn(prevBallOn => prevBallOn + gainYards);\n    } else {\n      setBallOn(prevBallOn => 100 - prevBallOn - gainYards);\n      setBallPlace(!ballPlace);\n    }\n  }\n\n  console.log(100);\n  console.log(gainYards);\n  console.log(ballOn);\n  return null;\n};\n\n_c = SetYards;\nexport default SetYards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetYards\");","map":{"version":3,"names":["SetYards","possession","ballPlace","ballOn","gainYards","setBallOn","setBallPlace","prevBallOn","console","log"],"sources":["/Users/toimotoriku/Desktop/gamecast/form1.1/src/form/functions/SetYards.ts"],"sourcesContent":["import React from \"react\"\nimport { Play } from \"../Alies\"\n\ntype Props = {\n    data:Play;\n    possession:boolean\n    ballPlace:boolean\n    ballOn:number\n    gainYards:number\n    setBallOn:React.Dispatch<React.SetStateAction<number>>\n    setBallPlace:React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst SetYards = (possession:boolean,ballPlace:boolean,ballOn:number,gainYards:number,setBallOn:React.Dispatch<React.SetStateAction<number>>,setBallPlace:React.Dispatch<React.SetStateAction<boolean>>) => {\n\n    if (possession && ballPlace){\n        if (ballOn + gainYards <= 50){\n            setBallOn(prevBallOn => prevBallOn + gainYards)\n        }else{\n            setBallOn(prevBallOn => 100 - prevBallOn - gainYards)\n            setBallPlace(!ballPlace)\n        }\n    }\n    else if (possession && (!ballPlace)){\n        setBallOn(prevBallOn => prevBallOn - gainYards)\n    }else if ((!possession) && ballPlace){\n        setBallOn(prevBallOn => prevBallOn - gainYards)\n    }else{\n        if (ballOn + gainYards <= 50){\n            setBallOn(prevBallOn => prevBallOn + gainYards)\n        }else{\n            setBallOn(prevBallOn => 100 - prevBallOn - gainYards)\n            setBallPlace(!ballPlace)\n        }\n    }\n    console.log(100)\n    console.log(gainYards)\n    console.log(ballOn)\n  return null\n}\n\nexport default SetYards\n"],"mappings":"AAaA,MAAMA,QAAQ,GAAG,CAACC,UAAD,EAAoBC,SAApB,EAAsCC,MAAtC,EAAoDC,SAApD,EAAqEC,SAArE,EAA4HC,YAA5H,KAA2L;EAExM,IAAIL,UAAU,IAAIC,SAAlB,EAA4B;IACxB,IAAIC,MAAM,GAAGC,SAAT,IAAsB,EAA1B,EAA6B;MACzBC,SAAS,CAACE,UAAU,IAAIA,UAAU,GAAGH,SAA5B,CAAT;IACH,CAFD,MAEK;MACDC,SAAS,CAACE,UAAU,IAAI,MAAMA,UAAN,GAAmBH,SAAlC,CAAT;MACAE,YAAY,CAAC,CAACJ,SAAF,CAAZ;IACH;EACJ,CAPD,MAQK,IAAID,UAAU,IAAK,CAACC,SAApB,EAA+B;IAChCG,SAAS,CAACE,UAAU,IAAIA,UAAU,GAAGH,SAA5B,CAAT;EACH,CAFI,MAEC,IAAK,CAACH,UAAF,IAAiBC,SAArB,EAA+B;IACjCG,SAAS,CAACE,UAAU,IAAIA,UAAU,GAAGH,SAA5B,CAAT;EACH,CAFK,MAED;IACD,IAAID,MAAM,GAAGC,SAAT,IAAsB,EAA1B,EAA6B;MACzBC,SAAS,CAACE,UAAU,IAAIA,UAAU,GAAGH,SAA5B,CAAT;IACH,CAFD,MAEK;MACDC,SAAS,CAACE,UAAU,IAAI,MAAMA,UAAN,GAAmBH,SAAlC,CAAT;MACAE,YAAY,CAAC,CAACJ,SAAF,CAAZ;IACH;EACJ;;EACDM,OAAO,CAACC,GAAR,CAAY,GAAZ;EACAD,OAAO,CAACC,GAAR,CAAYL,SAAZ;EACAI,OAAO,CAACC,GAAR,CAAYN,MAAZ;EACF,OAAO,IAAP;AACD,CA1BD;;KAAMH,Q;AA4BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}