{"ast":null,"code":"import { BallPosition, PossessionTeam, BallPlace, Punt, EndMakeDrive, GetPoints, KickOff, DownDistance, InterceptionFunc } from './EntryPoint';\n\nconst Allprocessor = _ref => {\n  let {\n    data,\n    ballPlace,\n    ballPossession,\n    ballOn,\n    down,\n    distance,\n    setBallPlace,\n    setBallPossession,\n    setBallOn,\n    setId,\n    setDown,\n    setDistance,\n    setHomePoints,\n    setAwayPoints\n  } = _ref;\n  var ballPlaceResult = ballPlace;\n  console.log(ballPlaceResult, \"FIrst\"); // BallOnのヤードに関して、Offenceでgainした時の処理\n\n  BallPosition({\n    data,\n    ballPlace,\n    ballPlaceResult,\n    ballPossession,\n    setBallOn,\n    ballOn,\n    setBallPlace\n  }); // Puntの時の処理\n\n  if (data.o_or_k === \"Punt\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance\n    });\n    Punt({\n      data,\n      ballPossession,\n      ballOn,\n      setBallOn,\n      ballPlace,\n      setBallPlace,\n      ballPlaceResult\n    });\n  } // FGの処理// TDの処理\n\n\n  if (data.kick_isgood === \"Good\" || ballOn < 0) {\n    GetPoints({\n      data,\n      ballPossession,\n      setHomePoints,\n      setAwayPoints,\n      ballOn,\n      setBallOn\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance\n    });\n    setBallPlace(!ballPlace);\n  } else if (data.o_or_k === \"FG\" && data.kick_isgood === \"No Good\") {\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance\n    });\n  } // Kick Off処理\n\n\n  if (data.o_or_k === \"Kick Off\") {\n    KickOff({\n      data,\n      ballOn,\n      setBallOn,\n      ballPlace,\n      setBallPlace,\n      ballPlaceResult\n    });\n    setBallPossession(!ballPossession);\n  } // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n  // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n\n\n  if (data.pass_iscomplete === \"Interception\" || data.result === \"Fumble\") {\n    setBallPossession(!ballPossession);\n    InterceptionFunc({\n      data,\n      ballPlace,\n      ballPossession,\n      setBallPlace,\n      setBallPossession,\n      setBallOn,\n      ballPlaceResult\n    });\n    EndMakeDrive({\n      data,\n      ballPossession,\n      setBallPossession,\n      setId,\n      setDown,\n      setDistance\n    });\n  } // D&Dの処理,シンプルにできる\n\n\n  if (data.o_or_k == \"Offense\") {\n    if (down === 4 && distance > data.yards_gained) {\n      EndMakeDrive({\n        data,\n        ballPossession,\n        setBallPossession,\n        setId,\n        setDown,\n        setDistance\n      });\n      setBallPossession(!ballPossession);\n      console.log(\"Gamble failed\");\n    } else {\n      DownDistance({\n        data,\n        distance,\n        setDown,\n        down,\n        setDistance\n      });\n    }\n  } // ボール保持チームが変わった時の処理\n\n\n  PossessionTeam(data, ballPossession); // Ballがどちらの陣地にあるかに関する処理\n\n  BallPlace(data, ballPlace, ballPlaceResult);\n  return null;\n};\n\n_c = Allprocessor;\nexport default Allprocessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Allprocessor\");","map":{"version":3,"names":["BallPosition","PossessionTeam","BallPlace","Punt","EndMakeDrive","GetPoints","KickOff","DownDistance","InterceptionFunc","Allprocessor","data","ballPlace","ballPossession","ballOn","down","distance","setBallPlace","setBallPossession","setBallOn","setId","setDown","setDistance","setHomePoints","setAwayPoints","ballPlaceResult","console","log","o_or_k","kick_isgood","pass_iscomplete","result","yards_gained"],"sources":["/Users/toimotoriku/Desktop/gamecast/form1.1/src/form/functions/AllProcessor.ts"],"sourcesContent":["import React from 'react'\nimport { Play } from '../Alies'\nimport { BallPosition,PossessionTeam,BallPlace, Punt,EndMakeDrive, GetPoints,Initializer,KickOff, DownDistance,InterceptionFunc } from './EntryPoint'\n\n\ntype Props = {\n    data:Play\n    ballPlace:boolean\n    ballPossession:boolean\n    ballOn:number\n    down:number\n    distance:number\n    setBallPlace:React.Dispatch<React.SetStateAction<boolean>>\n    setBallPossession:React.Dispatch<React.SetStateAction<boolean>>\n    setBallOn:React.Dispatch<React.SetStateAction<number>>\n    setId:React.Dispatch<React.SetStateAction<number>>\n    setDown:React.Dispatch<React.SetStateAction<number>>\n    setDistance:React.Dispatch<React.SetStateAction<number>>\n    setHomePoints:React.Dispatch<React.SetStateAction<number>>\n    setAwayPoints:React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Allprocessor:React.FC<Props> = ({data,ballPlace,ballPossession,ballOn,down,distance,setBallPlace,setBallPossession,setBallOn,setId,setDown,setDistance,setHomePoints,setAwayPoints}) => {\n\n    var ballPlaceResult = ballPlace\n    console.log(ballPlaceResult,\"FIrst\")\n\n    // BallOnのヤードに関して、Offenceでgainした時の処理\n    BallPosition({data,ballPlace,ballPlaceResult,ballPossession,setBallOn,ballOn,setBallPlace})\n\n    // Puntの時の処理\n    if (data.o_or_k === \"Punt\"){\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance})\n        Punt({data,ballPossession,ballOn,setBallOn,ballPlace,setBallPlace,ballPlaceResult})\n    }\n    // FGの処理// TDの処理\n    if (data.kick_isgood === \"Good\" || ballOn<0){\n        GetPoints({data,ballPossession,setHomePoints,setAwayPoints,ballOn,setBallOn})\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance})\n        setBallPlace(!ballPlace)\n    }else if(data.o_or_k===\"FG\" && data.kick_isgood===\"No Good\"){\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance})\n    }\n    // Kick Off処理\n    if (data.o_or_k ===\"Kick Off\"){\n        KickOff({data,ballOn,setBallOn,ballPlace,setBallPlace,ballPlaceResult})\n        setBallPossession(!ballPossession)\n    }\n\n    // INTの処理//Fumbleの処理　=> TurnOver,BallPlace,interceptされた場所、FumbelRecoverされた場所,return_yards\n    // INT=> Pass=>INT=>INT_PLACE=>RETURN_YARDS=>TURNOVER(BALLPOSSESSIONの変化)\n    if (data.pass_iscomplete===\"Interception\" || data.result === \"Fumble\"){\n        setBallPossession(!ballPossession)\n        InterceptionFunc({data,ballPlace,ballPossession,setBallPlace,setBallPossession,setBallOn,ballPlaceResult});\n        EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance})\n    }\n\n\n\n\n    // D&Dの処理,シンプルにできる\n    if (data.o_or_k == \"Offense\"){\n        if(down === 4 && distance > data.yards_gained){\n            EndMakeDrive({data,ballPossession,setBallPossession,setId,setDown,setDistance})\n            setBallPossession(!ballPossession)\n            console.log(\"Gamble failed\")\n        }else{\n            DownDistance({data,distance,setDown,down,setDistance})\n        }\n    }\n    // ボール保持チームが変わった時の処理\n    PossessionTeam(data,ballPossession);\n    // Ballがどちらの陣地にあるかに関する処理\n    BallPlace(data,ballPlace,ballPlaceResult)\n    \n  return null\n}\n\nexport default Allprocessor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}